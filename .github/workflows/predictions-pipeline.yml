name: F1 Predictions Pipeline

on:
  schedule:
    # Run every day at 12:00 UTC
    - cron: '0 12 * * *'
    # Run every Monday at 00:00 UTC
    - cron: '0 0 * * 1'
  workflow_dispatch:
    inputs:
      force_retrain:
        description: 'Force retrain existing predictions'
        required: false
        default: 'false'
  repository_dispatch:
    types: [trigger-predictions]

jobs:
  generate-predictions:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          f1_cache
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        cd packages/ml-core && pip install -e .
    
    - name: Run predictions pipeline
      env:
        WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
      run: |
        python scripts/train_models_v2.py \
          ${{ github.event.inputs.force_retrain == 'true' && '--force' || '' }}
    
    - name: Sync predictions to Cloudflare
      env:
        PREDICTIONS_API_KEY: ${{ secrets.PREDICTIONS_API_KEY }}
      run: |
        python scripts/sync_predictions.py \
          --api-url https://f1-predictions-api.vprifntqe.workers.dev
    
    - name: Upload model artifacts
      uses: actions/upload-artifact@v3
      with:
        name: models-${{ github.run_id }}
        path: models/
        retention-days: 30
    
    - name: Notify success
      if: success()
      run: |
        echo "âœ… Predictions generated successfully"
        echo "Check the dashboard at: https://f1-predictions-dashboard.pages.dev"
    
    - name: Create issue on failure
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'Predictions Pipeline Failed',
            body: `The predictions pipeline failed on ${new Date().toISOString()}\n\nWorkflow run: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
          })