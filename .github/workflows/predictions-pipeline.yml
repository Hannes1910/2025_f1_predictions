name: F1 Predictions Pipeline

on:
  schedule:
    # Run every day at 12:00 UTC
    - cron: '0 12 * * *'
    # Run every Monday at 00:00 UTC
    - cron: '0 0 * * 1'
  workflow_dispatch:
    inputs:
      force_retrain:
        description: 'Force retrain existing predictions'
        required: false
        default: 'false'
  repository_dispatch:
    types: [trigger-predictions]

jobs:
  generate-predictions:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
          f1_cache
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        cd packages/ml-core && pip install -e .
    
    - name: Run predictions pipeline
      env:
        WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
      run: |
        # Create necessary directories
        mkdir -p f1_cache models/ensemble
        
        # Check if ensemble models exist or force retrain
        if [ ! -f "models/ensemble/ensemble_model.pkl" ] || [ "${{ github.event.inputs.force_retrain }}" == "true" ]; then
          echo "Training ensemble models with real F1 data..."
          # Copy the real data loader to root for import
          cp load_real_f1_data.py ./
          python train_models_ensemble.py
        fi
        
        # Run legacy model for comparison
        python scripts/train_models_v2.py \
          ${{ github.event.inputs.force_retrain == 'true' && '--force' || '' }}
    
    - name: Sync predictions to Cloudflare
      env:
        PREDICTIONS_API_KEY: ${{ secrets.PREDICTIONS_API_KEY }}
        API_URL: https://f1-predictions-api.vprifntqe.workers.dev
      run: |
        # Sync ensemble predictions
        python sync_ensemble_predictions.py
        
        # Also sync legacy predictions for A/B testing
        python scripts/sync_predictions.py \
          --api-url https://f1-predictions-api.vprifntqe.workers.dev
    
    - name: Upload model artifacts
      uses: actions/upload-artifact@v4
      with:
        name: models-${{ github.run_id }}
        path: models/
        retention-days: 30
    
    - name: Notify success
      if: success()
      run: |
        echo "✅ Predictions generated successfully"
        echo "Check the dashboard at: https://f1-predictions-dashboard.pages.dev"
    
    - name: Log failure
      if: failure()
      run: |
        echo "❌ Predictions pipeline failed"
        echo "Workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"